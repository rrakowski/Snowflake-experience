# Examples of working in Snowflake cloud data platfom

--> Dummy query example (like SQL's 'Hello World')
SELECT
  *
FROM
  TRANSACTIONS
LIMIT
  10;

--> Loading data with traversing the keys in the JSON to get to the required "PRODUCTS_VIEWED"
SELECT PAYLOAD:"PRODUCTS_VIEWED" FROM RAW_DATA.SALES.TRANSACTIONS; 

SELECT
    PAYLOAD:CUSTOMER_ID::VARCHAR AS customer_id,
    FLATTENED_DATA.VALUE:PRODUCT_ID::VARCHAR AS product_id,
    FLATTENED_DATA.VALUE:PRICE::NUMBER AS price,
    PAYLOAD:DATE_OF_SESSION::TIMESTAMP AS DATE_OF_SESSION
FROM
    RAW_DATA.SALES.TRANSACTIONS AS TRANSACTIONS,
    LATERAL FLATTEN(input => TRANSACTIONS.PAYLOAD, path => 'PRODUCTS_VIEWED') AS FLATTENED_DATA;

--> if database.schema not specified then must specify it:
USE DATABASE RAW_DATA;
USE SCHEMA SALES;

--> Basic query example
SELECT
    FLATTENED_DATA.VALUE:PRODUCT_ID::VARCHAR AS PRODUCT_ID,
    SUM(1) AS FREQUENCY
FROM
    TRANSACTIONS AS TRANSACTIONS,
    LATERAL FLATTEN(input => TRANSACTIONS.PAYLOAD, path => 'PRODUCTS_VIEWED') AS FLATTENED_DATA
GROUP BY
    FLATTENED_DATA.VALUE:PRODUCT_ID
ORDER BY
    FREQUENCY DESC;

--> Creating view of above query
CREATE OR REPLACE VIEW RAW_DATA.SALES.TOP_10_VIEWED_PRODUCTS AS -- line added to above saves view but not display it
(   SELECT
        FLATTENED_DATA.VALUE:PRODUCT_ID::VARCHAR AS PRODUCT_ID,
        SUM(1) AS FREQUENCY
    FROM
        RAW_DATA.SALES.TRANSACTIONS AS TRANSACTIONS,
        LATERAL FLATTEN(input => TRANSACTIONS.PAYLOAD, path => 'PRODUCTS_VIEWED') AS FLATTENED_DATA
    GROUP BY
        FLATTENED_DATA.VALUE:PRODUCT_ID
    ORDER BY
        FREQUENCY DESC
    
); 

--> Running view:
SELECT * FROM RAW_DATA.SALES.TOP_10_VIEWED_PRODUCTS;

--> Creating a new warehouse
USE ROLE SYSADMIN;
CREATE OR REPLACE WAREHOUSE Reporting_WH WAREHOUSE_SIZE = 'Medium';
GRANT USAGE ON WAREHOUSE Reporting_WH TO ROLE DATA_CONSUMER;

--> Granting permissions
GRANT USAGE ON SCHEMA RAW_DATA.SALES TO ROLE DATA_CONSUMER;
GRANT SELECT ON VIEW RAW_DATA.SALES.TOP_10_VIEWED_PRODUCTS TO ROLE DATA_CONSUMER;

--> Switching to ACCOUNTADMIN role
USE ROLE ACCOUNTADMIN;
USE DATABASE RAW_DATA;
USE SCHEMA SALES;
CREATE OR REPLACE STAGE TRANSACTIONS_EXTERNAL_STAGE
  URL = 's3://snowflake-101/';
LIST @TRANSACTIONS_EXTERNAL_STAGE;
TRUNCATE TABLE RAW_DATA.SALES.TRANSACTIONS;

COPY INTO RAW_DATA.SALES.TRANSACTIONS
FROM @TRANSACTIONS_EXTERNAL_STAGE/all_transactions.json
    FILE_FORMAT =   (TYPE=JSON, STRIP_OUTER_ARRAY=FALSE, DATE_FORMAT=AUTO, TIME_FORMAT=AUTO,   
    TIMESTAMP_FORMAT=AUTO) ON_ERROR = 'skip_file';

SELECT 
    FLATTENED_DATA.VALUE:PRODUCT_ID::VARCHAR AS PRODUCT_ID, SUM(1) AS FREQUENCY
FROM 
    TRANSACTIONS AS TRANSACTIONS, LATERAL FLATTEN(input => TRANSACTIONS.PAYLOAD, path => 'PRODUCTS_VIEWED') AS FLATTENED_DATA
GROUP BY 
    FLATTENED_DATA.VALUE:PRODUCT_ID
ORDER BY
    FREQUENCY DESC;



